---
import { Image } from 'astro:assets';
import slide01 from '../../assets/slide-01.png';
import slide02 from '../../assets/slide-02.png';
import slide03 from '../../assets/slide-03.png';
import slide04 from '../../assets/slide-04.png';
import slide05 from '../../assets/slide-05.png';

const slideImages = [
  {
    src: slide01,
    alt: 'Interior moderno de automóvil',
    title: 'Auto Loa',
    subtitle: 'Tu próximo auto te está esperando'
  },
  {
    src: slide02,
    alt: 'Automóvil de lujo en carretera',
    title: 'Calidad Premium',
    subtitle: 'Los mejores vehículos del mercado'
  },
  {
    src: slide03,
    alt: 'Concesionario de automóviles',
    title: 'Amplio Inventario',
    subtitle: 'Miles de opciones para elegir'
  },
  {
    src: slide04,
    alt: 'Auto eléctrico cargando',
    title: 'Futuro Sostenible',
    subtitle: 'Vehículos eléctricos e híbridos'
  },
  {
    src: slide05,
    alt: 'Llaves de automóvil',
    title: 'Financiamiento Fácil',
    subtitle: 'Planes de pago que se adaptan a ti'
  }
];

  
---

<section class="hero-section py-8 sm:py-12 lg:py-16">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div id="hero-carousel" class="relative w-full">
      <!-- Carousel wrapper -->
      <div class="relative h-80 sm:h-96 md:h-[450px] lg:h-[500px] overflow-hidden rounded-[20px] sm:rounded-[30px] lg:rounded-[50px] shadow-2xl">
         <!-- Carousel Items -->
        {slideImages.map((slide, index) => (
          <div class={`absolute inset-0 transition-opacity duration-800 ease-in-out ${index === 0 ? 'opacity-100' : 'opacity-0 hidden'}`} data-carousel-item={index === 0 ? 'active' : ''}>
            <Image src={slide.src} alt={slide.alt} class="w-full h-full object-cover object-center" />
            <div class="absolute inset-0 bg-black/50 flex items-center">
              <div class="container mx-auto px-14 sm:px-8 lg:px-[130px]">
                <div class="max-w-full sm:max-w-2xl lg:max-w-3xl text-white">
                  <h1 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold mb-3 sm:mb-4 leading-tight">
                    {slide.title}
                  </h1>
                  <p class="text-sm sm:text-base md:text-lg lg:text-xl xl:text-2xl mb-4 sm:mb-6 lg:mb-8 leading-relaxed opacity-90">
                    {slide.subtitle}
                  </p>
                  <a 
                    href="/catalogo" 
                    class="inline-flex items-center px-4 py-2 sm:px-6 sm:py-3 lg:px-8 lg:py-4 bg-blue-600 hover:bg-blue-700 text-white font-semibold text-sm sm:text-base lg:text-lg rounded-md sm:rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
                  >
                    Ver Stock
                    <svg class="ml-1 sm:ml-2 w-4 h-4 sm:w-5 sm:h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                    </svg>
                  </a>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    <!-- Slider indicators -->
    <div class="absolute z-30 flex -translate-x-1/2 space-x-2 sm:space-x-3 rtl:space-x-reverse bottom-3 sm:bottom-5 left-1/2">
        <button type="button" class="w-2 h-2 sm:w-3 sm:h-3 rounded-full" aria-current="true" aria-label="Slide 1" data-carousel-slide-to="0"></button>
        <button type="button" class="w-2 h-2 sm:w-3 sm:h-3 rounded-full" aria-current="false" aria-label="Slide 2" data-carousel-slide-to="1"></button>
        <button type="button" class="w-2 h-2 sm:w-3 sm:h-3 rounded-full" aria-current="false" aria-label="Slide 3" data-carousel-slide-to="2"></button>
        <button type="button" class="w-2 h-2 sm:w-3 sm:h-3 rounded-full" aria-current="false" aria-label="Slide 4" data-carousel-slide-to="3"></button>
        <button type="button" class="w-2 h-2 sm:w-3 sm:h-3 rounded-full" aria-current="false" aria-label="Slide 5" data-carousel-slide-to="4"></button>
    </div>
    <!-- Slider controls -->
    <button type="button" class="absolute top-0 start-0 z-30 flex items-center justify-center h-full px-2 sm:px-4 cursor-pointer group focus:outline-none" data-carousel-prev>
        <span class="inline-flex items-center justify-center w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
            <svg class="w-3 h-3 sm:w-4 sm:h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"/>
            </svg>
            <span class="sr-only">Previous</span>
        </span>
    </button>
    <button type="button" class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-2 sm:px-4 cursor-pointer group focus:outline-none" data-carousel-next>
        <span class="inline-flex items-center justify-center w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
            <svg class="w-3 h-3 sm:w-4 sm:h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
            </svg>
            <span class="sr-only">Next</span>
        </span>
    </button>
    </div>
  </div>
</section>

<script>
  // Carousel functionality
  document.addEventListener('DOMContentLoaded', function() {
    const carousel = document.getElementById('hero-carousel');
    if (!carousel) return;
    
    const items = carousel.querySelectorAll('[data-carousel-item]');
    const indicators = carousel.querySelectorAll('[data-carousel-slide-to]');
    const prevBtn = carousel.querySelector('[data-carousel-prev]');
    const nextBtn = carousel.querySelector('[data-carousel-next]');
    
    if (!items.length || !indicators.length) return;
    
    let currentIndex = 0;
    let autoplayInterval: ReturnType<typeof setInterval> | null = null;
    
    // Show specific slide
    function showSlide(index: number) {
      // Hide all items with fade out effect
      items.forEach((item, i) => {
        if (i === index) {
          item.classList.remove('hidden', 'opacity-0');
          item.classList.add('opacity-100');
          item.setAttribute('data-carousel-item', 'active');
        } else {
          item.classList.remove('opacity-100');
          item.classList.add('opacity-0');
          // Hide after transition completes
          setTimeout(() => {
            if (!item.classList.contains('opacity-100')) {
              item.classList.add('hidden');
            }
          }, 800);
        }
      });
      
      // Update indicators
      indicators.forEach((indicator, i) => {
        if (i === index) {
          indicator.setAttribute('aria-current', 'true');
          indicator.classList.add('bg-white');
          indicator.classList.remove('bg-white/50');
        } else {
          indicator.setAttribute('aria-current', 'false');
          indicator.classList.remove('bg-white');
          indicator.classList.add('bg-white/50');
        }
      });
      
      currentIndex = index;
    }
    
    // Next slide
    function nextSlide() {
      const nextIndex = (currentIndex + 1) % items.length;
      showSlide(nextIndex);
    }
    
    // Previous slide
    function prevSlide() {
      const prevIndex = (currentIndex - 1 + items.length) % items.length;
      showSlide(prevIndex);
    }
    
    // Initialize carousel
    function initCarousel() {
      // Set initial indicator styles
      indicators.forEach((indicator, i) => {
        if (i === 0) {
          indicator.classList.add('bg-white');
          indicator.classList.remove('bg-white/50');
        } else {
          indicator.classList.add('bg-white/50');
          indicator.classList.remove('bg-white');
        }
      });
      
      // Initialize all slides with proper opacity
      items.forEach((item, i) => {
        if (i === 0) {
          item.classList.remove('hidden', 'opacity-0');
          item.classList.add('opacity-100');
        } else {
          item.classList.add('hidden', 'opacity-0');
          item.classList.remove('opacity-100');
        }
      });
      
      // Show first slide
      showSlide(0);
    }
    
    // Event listeners
    if (nextBtn) {
      nextBtn.addEventListener('click', () => {
        nextSlide();
        resetAutoplay();
      });
    }
    
    if (prevBtn) {
      prevBtn.addEventListener('click', () => {
        prevSlide();
        resetAutoplay();
      });
    }
    
    // Indicator clicks
    indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => {
        showSlide(index);
        resetAutoplay();
      });
    });
    
    // Autoplay functionality
    function startAutoplay() {
      autoplayInterval = setInterval(nextSlide, 8000); // Más lento: 8 segundos
    }
    
    function stopAutoplay() {
      if (autoplayInterval) {
        clearInterval(autoplayInterval);
        autoplayInterval = null;
      }
    }
    
    function resetAutoplay() {
      stopAutoplay();
      startAutoplay();
    }
    
    // Pause autoplay on hover
    carousel.addEventListener('mouseenter', stopAutoplay);
    carousel.addEventListener('mouseleave', startAutoplay);
    
    // Initialize
    initCarousel();
    startAutoplay();
  });
</script>

<style>
  /* Smooth fade transitions for carousel items */
  [data-carousel-item] {
    transition: opacity 0.8s ease-in-out;
  }
  
  /* Indicator styles */
  [data-carousel-slide-to] {
    transition: all 0.3s ease;
    background-color: rgba(255, 255, 255, 0.5);
  }
  
  [data-carousel-slide-to][aria-current="true"] {
    background-color: white;
  }
  
  /* Hover effects for controls */
  [data-carousel-prev]:hover span,
  [data-carousel-next]:hover span {
    background-color: rgba(255, 255, 255, 0.8);
  }
</style>
